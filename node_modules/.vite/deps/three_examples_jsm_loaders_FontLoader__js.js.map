{"version":3,"file":"three_examples_jsm_loaders_FontLoader__js.js","names":[],"sources":["../../three/examples/jsm/loaders/FontLoader.js"],"sourcesContent":["import {\n\tFileLoader,\n\tLoader,\n\tShapePath\n} from 'three';\n\nclass FontLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tconst font = scope.parse( JSON.parse( text ) );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\treturn new Font( json );\n\n\t}\n\n}\n\n//\n\nclass Font {\n\n\tconstructor( data ) {\n\n\t\tthis.isFont = true;\n\n\t\tthis.type = 'Font';\n\n\t\tthis.data = data;\n\n\t}\n\n\tgenerateShapes( text, size = 100 ) {\n\n\t\tconst shapes = [];\n\t\tconst paths = createPaths( text, size, this.data );\n\n\t\tfor ( let p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tshapes.push( ...paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nfunction createPaths( text, size, data ) {\n\n\tconst chars = Array.from( text );\n\tconst scale = size / data.resolution;\n\tconst line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tconst paths = [];\n\n\tlet offsetX = 0, offsetY = 0;\n\n\tfor ( let i = 0; i < chars.length; i ++ ) {\n\n\t\tconst char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tconst ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tconst glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) {\n\n\t\tconsole.error( 'THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.' );\n\n\t\treturn;\n\n\t}\n\n\tconst path = new ShapePath();\n\n\tlet x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tconst outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( let i = 0, l = outline.length; i < l; ) {\n\n\t\t\tconst action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\nexport { FontLoader, Font };\n"],"mappings":"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"}